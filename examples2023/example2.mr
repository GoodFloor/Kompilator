JUMP 388
# procedury
# pa (proc0_)
# x := y;
RST b
LOAD b
PUT b
RST c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
GET c
ADD d
PUT c
GET c
STORE b
# x := y;
RST b
INC b
LOAD b
PUT b
RST c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
GET c
SUB d
PUT c
GET c
STORE b
RST b
INC b
SHL b
LOAD b
JUMPR a
# pb (proc1_)
# call proc0_
RST a
INC a
SHL a
INC a
LOAD a
RST b
STORE b
RST a
INC a
SHL a
SHL a
LOAD a
RST b
INC b
STORE b
RST b
INC b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
# call proc0_
RST a
INC a
SHL a
INC a
LOAD a
RST b
STORE b
RST a
INC a
SHL a
SHL a
LOAD a
RST b
INC b
STORE b
RST b
INC b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
RST b
INC b
SHL b
SHL b
INC b
LOAD b
JUMPR a
# pc (proc2_)
# call proc1_
RST a
INC a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 45
# end of call
# call proc1_
RST a
INC a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 45
# end of call
# call proc1_
RST a
INC a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 45
# end of call
RST b
INC b
SHL b
SHL b
SHL b
LOAD b
JUMPR a
# pd (proc3_)
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 104
# end of call
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 104
# end of call
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 104
# end of call
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
INC a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
LOAD a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 104
# end of call
RST b
INC b
SHL b
SHL b
INC b
SHL b
INC b
LOAD b
JUMPR a
# main
# read x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
READ
STORE b
# read x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
READ
STORE b
# call proc3_
RST a
INC a
SHL a
INC a
SHL a
SHL a
RST b
INC b
SHL b
SHL b
SHL b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
SHL a
INC a
RST b
INC b
SHL b
SHL b
INC b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 219
# end of call
# write x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
LOAD b
PUT b
GET b
WRITE
# write x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
GET b
WRITE
HALT
