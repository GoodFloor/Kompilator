JUMP 606
# procedury
# shuffle (proc0_)
# x := y;
RST b
INC b
SHL b
INC b
RST c
INC c
SHL c
SHL c
INC c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
RST c
INC c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
RST c
GET c
STORE b
# while
RST b
INC b
SHL b
LOAD b
PUT b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
#LESS
GET c
SUB b
JPOS 42
INC a
JUMP 43
RST a
JPOS 185
# while true
# x := y;
RST b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
LOAD c
PUT c
RST d
INC d
SHL d
INC d
LOAD d
PUT d
# mno≈ºenie
GET c
JZERO 92
GET d
JPOS 66
RST c
JUMP 92
SUB c
JZERO 74
GET c
PUT e
GET d
PUT c
GET e
PUT d
RST e
GET d
DEC a
JZERO 89
GET d
SHR d
SHL d
SUB d
JZERO 86
GET c
ADD e
PUT e
SHL c
SHR d
JUMP 75
GET c
ADD e
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
# reszta
RST e
GET c
JZERO 150
PUT e
RST c
GET d
DEC a
JZERO 150
GET e
PUT c
RST e
GET d
SUB c
JPOS 150
RST f
GET d
SUB c
JPOS 131
SHL d
INC f
JUMP 125
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 150
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 137
INC e
GET c
SUB d
PUT c
JUMP 137
GET c
STORE b
# x := y;
RST b
LOAD b
PUT b
RST a
INC a
SHL a
LOAD a
ADD b
PUT b
RST c
INC c
SHL c
SHL c
LOAD c
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 26
# endwhile
# x := y;
RST b
INC b
SHL b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
GET c
SUB d
PUT c
GET c
STORE b
# x := y;
RST b
LOAD b
PUT b
RST a
INC a
SHL a
LOAD a
ADD b
PUT b
RST c
GET c
STORE b
RST b
INC b
SHL b
SHL b
INC b
LOAD b
JUMPR a
# sort (proc1_)
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
INC b
RST c
INC c
GET c
STORE b
# while
RST b
INC b
SHL b
SHL b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
INC c
LOAD c
PUT c
LOAD c
PUT c
#LESS
GET c
SUB b
JPOS 253
INC a
JUMP 254
RST a
JPOS 501
# while true
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
INC c
SHL c
LOAD c
PUT c
RST a
INC a
SHL a
SHL a
SHL a
INC a
LOAD a
ADD c
PUT c
LOAD c
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
RST c
INC c
SHL c
SHL c
SHL c
INC c
LOAD c
PUT c
GET c
STORE b
# while
RST b
INC b
SHL b
SHL b
INC b
SHL b
LOAD b
PUT b
RST c
GET b
SUB c
JPOS 310
INC a
JUMP 311
RST a
JPOS 453
# while true
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
SHL c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
SUB d
PUT c
GET c
STORE b
# if-else
RST b
INC b
SHL b
INC b
SHL b
LOAD b
PUT b
RST a
INC a
SHL a
SHL a
INC a
SHL a
INC a
LOAD a
ADD b
PUT b
LOAD b
PUT b
RST c
INC c
SHL c
SHL c
SHL c
LOAD c
PUT c
GET b
SUB c
JPOS 365
INC a
JUMP 366
RST a
JPOS 426
# if true
# x := y;
RST b
INC b
SHL b
INC b
SHL b
LOAD b
PUT b
RST a
INC a
SHL a
SHL a
INC a
SHL a
LOAD a
ADD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
LOAD c
PUT c
RST a
INC a
SHL a
SHL a
INC a
SHL a
INC a
LOAD a
ADD c
PUT c
LOAD c
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
RST c
INC c
SHL c
SHL c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
SUB d
PUT c
GET c
STORE b
JUMP 452
# if false
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
SHL c
INC c
SHL c
LOAD c
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
RST c
GET c
STORE b
# endif
JUMP 296
# endwhile
# x := y;
RST b
INC b
SHL b
INC b
SHL b
LOAD b
PUT b
RST a
INC a
SHL a
SHL a
INC a
SHL a
INC a
LOAD a
ADD b
PUT b
RST c
INC c
SHL c
SHL c
SHL c
LOAD c
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
SHL c
INC c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 230
# endwhile
RST b
INC b
SHL b
INC b
SHL b
SHL b
LOAD b
JUMPR a
# write (proc2_)
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
INC b
RST c
GET c
STORE b
# while
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
INC c
SHL c
LOAD c
PUT c
LOAD c
PUT c
#LESS
GET c
SUB b
JPOS 546
INC a
JUMP 547
RST a
JPOS 598
# while true
# write x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
RST a
INC a
SHL a
INC a
SHL a
INC a
SHL a
INC a
LOAD a
ADD b
PUT b
LOAD b
PUT b
GET b
WRITE
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
INC c
SHL c
INC c
SHL c
INC c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 520
# endwhile
RST b
INC b
SHL b
SHL b
SHL b
SHL b
LOAD b
JUMPR a
# main
# x := y;
RST b
INC b
SHL b
SHL b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
INC c
SHL c
INC c
SHL c
INC c
GET c
STORE b
# call proc0_
RST a
INC a
SHL a
SHL a
SHL a
SHL a
INC a
RST b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
SHL a
SHL a
RST b
INC b
STORE b
RST b
INC b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
SHL a
INC a
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
SHL a
SHL a
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 509
# end of call
# write x;
RST b
INC b
SHL b
SHL b
SHL b
INC b
SHL b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
SHL b
SHL b
SHL b
SHL b
SHL b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
SHL b
SHL b
INC b
SHL b
GET b
WRITE
# call proc1_
RST a
INC a
SHL a
SHL a
SHL a
SHL a
INC a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
SHL a
SHL a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 220
# end of call
# call proc2_
RST a
INC a
SHL a
SHL a
SHL a
SHL a
INC a
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
STORE b
RST a
INC a
SHL a
SHL a
INC a
SHL a
SHL a
SHL a
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 509
# end of call
HALT
