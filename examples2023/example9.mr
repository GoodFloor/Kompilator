JUMP 377
# procedury
# factorial (proc0_)
# x := y;
RST b
LOAD b
PUT b
RST a
ADD b
PUT b
RST c
INC c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
RST c
INC c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
RST c
GET c
STORE b
# while
RST b
INC b
SHL b
LOAD b
PUT b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
GET b
SUB c
JPOS 132
# while true
# x := y;
RST b
LOAD b
PUT b
RST a
INC a
SHL a
LOAD a
ADD b
PUT b
RST c
LOAD c
PUT c
RST a
INC a
SHL a
INC a
LOAD a
ADD c
PUT c
LOAD c
PUT c
RST d
INC d
SHL d
LOAD d
PUT d
# mno≈ºenie
GET c
JZERO 97
GET d
JPOS 71
RST c
JUMP 97
SUB c
JZERO 79
GET c
PUT e
GET d
PUT c
GET e
PUT d
RST e
GET d
DEC a
JZERO 94
GET d
SHR d
SHL d
SUB d
JZERO 91
GET c
ADD e
PUT e
SHL c
SHR d
JUMP 80
GET c
ADD e
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
RST c
INC c
SHL c
INC c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 25
# endwhile
RST b
INC b
SHL b
SHL b
LOAD b
JUMPR a
# bc (proc1_)
# call proc0_
RST a
INC a
SHL a
SHL a
SHL a
RST b
STORE b
RST a
INC a
SHL a
SHL a
INC a
LOAD a
RST b
INC b
STORE b
RST b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
# x := y;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
INC c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
SHL d
INC d
SHL d
LOAD d
PUT d
LOAD d
PUT d
GET c
SUB d
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
SHL c
SHL c
RST a
INC a
SHL a
SHL a
INC a
LOAD a
LOAD a
ADD c
PUT c
LOAD c
PUT c
RST d
INC d
SHL d
SHL d
SHL d
RST a
INC a
SHL a
INC a
SHL a
LOAD a
LOAD a
ADD d
PUT d
LOAD d
PUT d
# dzielenie
RST e
GET c
JZERO 280
PUT e
RST c
GET d
DEC a
JZERO 280
GET e
PUT c
RST e
GET d
SUB c
JPOS 280
RST f
GET d
SUB c
JPOS 261
SHL d
INC f
JUMP 255
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 280
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 267
INC e
GET c
SUB d
PUT c
JUMP 267
GET e
STORE b
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
INC c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
SHL d
SHL d
SHL d
RST a
INC a
SHL a
INC a
SHL a
SHL a
INC a
SHL a
INC a
SHL a
SHL a
LOAD a
ADD d
PUT d
LOAD d
PUT d
# dzielenie
RST e
GET c
JZERO 361
PUT e
RST c
GET d
DEC a
JZERO 361
GET e
PUT c
RST e
GET d
SUB c
JPOS 361
RST f
GET d
SUB c
JPOS 342
SHL d
INC f
JUMP 336
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 361
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 348
INC e
GET c
SUB d
PUT c
JUMP 348
GET e
STORE b
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
INC b
LOAD b
JUMPR a
# main
# read x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
INC b
SHL b
READ
STORE b
# read x;
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
INC b
SHL b
INC b
READ
STORE b
# call proc1_
RST a
INC a
SHL a
INC a
SHL a
SHL a
INC a
SHL a
INC a
SHL a
INC a
SHL a
RST b
INC b
SHL b
SHL b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
SHL a
INC a
SHL a
INC a
SHL a
INC a
SHL a
INC a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST a
INC a
SHL a
INC a
SHL a
INC a
SHL a
SHL a
SHL a
SHL a
RST b
INC b
SHL b
INC b
SHL b
INC b
STORE b
RST b
INC b
SHL b
INC b
SHL b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
INC b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 138
# end of call
# write x;
RST b
INC b
SHL b
INC b
SHL b
INC b
SHL b
SHL b
SHL b
SHL b
LOAD b
PUT b
GET b
WRITE
HALT
