JUMP 279
# procedury
# licz (proc0_)
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
GET c
STORE b
# while
RST b
INC b
SHL b
LOAD b
PUT b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
GET b
SUB c
JPOS 52
# while true
# x := y;
RST b
LOAD b
PUT b
RST a
INC a
SHL a
LOAD a
ADD b
PUT b
RST c
INC c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 9
# endwhile
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
GET c
STORE b
# while
RST b
INC b
SHL b
LOAD b
PUT b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
GET b
SUB c
JPOS 177
# while true
# if
RST b
LOAD b
PUT b
RST a
INC a
SHL a
LOAD a
ADD b
PUT b
LOAD b
PUT b
RST c
GET b
SUB c
JPOS 91
INC a
JUMP 92
RST a
JPOS 161
# if true
# x := y;
RST b
INC b
SHL b
INC b
RST c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
SHL d
LOAD d
PUT d
GET c
ADD d
PUT c
GET c
STORE b
# while
RST b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
LOAD c
PUT c
LOAD c
PUT c
GET b
SUB c
JPOS 161
# while true
# x := y;
RST b
LOAD b
PUT b
RST a
INC a
SHL a
INC a
LOAD a
ADD b
PUT b
RST c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
RST c
INC c
SHL c
INC c
LOAD c
PUT c
RST d
INC d
SHL d
LOAD d
PUT d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 112
# endwhile
# endif
# x := y;
RST b
INC b
SHL b
RST c
INC c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 60
# endwhile
RST b
INC b
SHL b
SHL b
LOAD b
JUMPR a
# wypisz (proc1_)
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
GET c
STORE b
# while
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
LOAD c
PUT c
LOAD c
PUT c
GET b
SUB c
JPOS 272
# while true
# if
RST b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
RST a
INC a
SHL a
INC a
SHL a
INC a
LOAD a
ADD b
PUT b
LOAD b
PUT b
RST c
GET b
SUB c
JPOS 238
INC a
JUMP 239
RST a
JPOS 250
# if true
# write x;
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
GET b
WRITE
# endif
# x := y;
RST b
INC b
SHL b
INC b
SHL b
INC b
RST c
INC c
SHL c
INC c
SHL c
INC c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
JUMP 194
# endwhile
RST b
INC b
SHL b
SHL b
SHL b
LOAD b
JUMPR a
# main
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
INC b
RST c
INC c
SHL c
INC c
SHL c
SHL c
SHL c
SHL c
INC c
SHL c
INC c
GET c
STORE b
# call proc0_
RST a
INC a
SHL a
SHL a
INC a
SHL a
RST b
STORE b
RST a
INC a
SHL a
SHL a
SHL a
INC a
RST b
INC b
STORE b
RST b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
# call proc1_
RST a
INC a
SHL a
SHL a
INC a
SHL a
RST b
INC b
SHL b
SHL b
INC b
STORE b
RST a
INC a
SHL a
SHL a
SHL a
INC a
RST b
INC b
SHL b
INC b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 183
# end of call
HALT
