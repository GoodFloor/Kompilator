JUMP 219
# procedury
# check (proc0_)
# x := y;
RST b
INC b
SHL b
LOAD b
PUT b
RST c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
RST c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
# reszta
RST e
GET c
JZERO 64
PUT e
RST c
GET d
DEC a
JZERO 64
GET e
PUT c
RST e
GET d
SUB c
JPOS 64
RST f
GET d
SUB c
JPOS 45
SHL d
INC f
JUMP 39
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 64
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 51
INC e
GET c
SUB d
PUT c
JUMP 51
GET c
STORE b
# while
RST b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
GET b
SUB c
PUT d
GET c
SUB b
ADD d
JPOS 213
# while true
# x := y;
RST b
LOAD b
PUT b
RST c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
# dzielenie
RST e
GET c
JZERO 134
PUT e
RST c
GET d
DEC a
JZERO 134
GET e
PUT c
RST e
GET d
SUB c
JPOS 134
RST f
GET d
SUB c
JPOS 115
SHL d
INC f
JUMP 109
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 134
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 121
INC e
GET c
SUB d
PUT c
JUMP 121
GET e
STORE b
# x := y;
RST b
INC b
SHL b
LOAD b
PUT b
RST c
INC c
SHL c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
RST c
LOAD c
PUT c
LOAD c
PUT c
RST d
INC d
LOAD d
PUT d
LOAD d
PUT d
# reszta
RST e
GET c
JZERO 210
PUT e
RST c
GET d
DEC a
JZERO 210
GET e
PUT c
RST e
GET d
SUB c
JPOS 210
RST f
GET d
SUB c
JPOS 191
SHL d
INC f
JUMP 185
SHR d
DEC f
INC e
GET c
SUB d
PUT c
GET f
JZERO 210
SHL e
DEC f
SHR d
GET d
SUB c
JPOS 197
INC e
GET c
SUB d
PUT c
JUMP 197
GET c
STORE b
JUMP 66
# endwhile
RST b
INC b
SHL b
SHL b
LOAD b
JUMPR a
# main
# read x;
RST b
INC b
SHL b
SHL b
INC b
READ
STORE b
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
SHL b
RST c
INC c
SHL c
SHL c
SHL c
LOAD c
PUT c
RST d
INC d
SHL d
SHL d
SHL d
LOAD d
PUT d
# mnożenie
GET c
JZERO 287
GET d
JPOS 261
RST c
JUMP 287
SUB c
JZERO 269
GET c
PUT e
GET d
PUT c
GET e
PUT d
RST e
GET d
DEC a
JZERO 284
GET d
SHR d
SHL d
SUB d
JZERO 281
GET c
ADD e
PUT e
SHL c
SHR d
JUMP 270
GET c
ADD e
PUT c
GET c
STORE b
# while
RST b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
SHL c
INC c
SHL c
LOAD c
PUT c
GET c
SUB b
JPOS 451
# while true
# call proc0_
RST a
INC a
SHL a
SHL a
INC a
RST b
STORE b
RST a
INC a
SHL a
SHL a
SHL a
RST b
INC b
STORE b
RST a
INC a
SHL a
INC a
SHL a
INC a
RST b
INC b
SHL b
STORE b
RST b
INC b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
STRK a
ADD c
STORE b
JUMP 1
# end of call
# if
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
RST c
GET b
SUB c
JPOS 357
INC a
JUMP 358
RST a
JPOS 378
# if true
# write x;
RST b
INC b
SHL b
SHL b
SHL b
LOAD b
PUT b
GET b
WRITE
# write x;
RST b
INC b
SHL b
INC b
SHL b
INC b
LOAD b
PUT b
GET b
WRITE
# endif
# x := y;
RST b
INC b
SHL b
SHL b
SHL b
RST c
INC c
SHL c
SHL c
SHL c
LOAD c
PUT c
RST d
INC d
GET c
ADD d
PUT c
GET c
STORE b
# x := y;
RST b
INC b
SHL b
INC b
SHL b
RST c
INC c
SHL c
SHL c
SHL c
LOAD c
PUT c
RST d
INC d
SHL d
SHL d
SHL d
LOAD d
PUT d
# mnożenie
GET c
JZERO 448
GET d
JPOS 422
RST c
JUMP 448
SUB c
JZERO 430
GET c
PUT e
GET d
PUT c
GET e
PUT d
RST e
GET d
DEC a
JZERO 445
GET d
SHR d
SHL d
SUB d
JZERO 442
GET c
ADD e
PUT e
SHL c
SHR d
JUMP 431
GET c
ADD e
PUT c
GET c
STORE b
JUMP 289
# endwhile
# if
RST b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
RST c
INC c
GET b
SUB c
PUT d
GET c
SUB b
ADD d
JPOS 469
INC a
JUMP 470
RST a
JPOS 484
# if true
# write x;
RST b
INC b
SHL b
SHL b
INC b
LOAD b
PUT b
GET b
WRITE
# write x;
RST b
INC b
GET b
WRITE
# endif
HALT
